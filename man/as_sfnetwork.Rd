% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfnetwork.R
\name{as_sfnetwork}
\alias{as_sfnetwork}
\alias{as_sfnetwork.default}
\alias{as_sfnetwork.sf}
\alias{as_sfnetwork.linnet}
\alias{as_sfnetwork.psp}
\alias{as_sfnetwork.sfc}
\alias{as_sfnetwork.sfNetwork}
\alias{as_sfnetwork.tbl_graph}
\title{Convert a foreign object to a sfnetwork}
\usage{
as_sfnetwork(x, ...)

\method{as_sfnetwork}{default}(x, ...)

\method{as_sfnetwork}{sf}(x, ...)

\method{as_sfnetwork}{linnet}(x, ...)

\method{as_sfnetwork}{psp}(x, ...)

\method{as_sfnetwork}{sfc}(x, ...)

\method{as_sfnetwork}{sfNetwork}(x, ...)

\method{as_sfnetwork}{tbl_graph}(x, ...)
}
\arguments{
\item{x}{Object to be converted into an \code{\link{sfnetwork}}.}

\item{...}{Arguments passed on to the \code{\link{sfnetwork}} construction
function, unless specified otherwise.}
}
\value{
An object of class \code{\link{sfnetwork}}.
}
\description{
Convert a given object into an object of class \code{\link{sfnetwork}}.
}
\section{Methods (by class)}{
\itemize{
\item \code{as_sfnetwork(default)}: By default, the provided object is first converted
into a \code{\link[tidygraph]{tbl_graph}} using
\code{\link[tidygraph]{as_tbl_graph}}. Further conversion into an
\code{\link{sfnetwork}} will work as long as the nodes can be converted to
an \code{\link[sf]{sf}} object through \code{\link[sf]{st_as_sf}}.

\item \code{as_sfnetwork(sf)}: Convert spatial features of class
\code{\link[sf]{sf}} directly into an \code{\link{sfnetwork}}.
Supported geometry types are either \code{LINESTRING} or \code{POINT}. In
the first case, the lines become the edges in the network, and nodes are
placed at their boundary points. All arguments are forwarded to
\code{\link{create_from_spatial_lines}}. In the latter case, the points
become the nodes in the network, and are connected by edges according to a
specified method. All arguments are forwarded to
\code{\link{create_from_spatial_points}}.

\item \code{as_sfnetwork(linnet)}: Convert spatial linear networks of class
\code{\link[spatstat.linnet]{linnet}} directly into an
\code{\link{sfnetwork}}. This requires the
\code{\link[spatstat.geom]{spatstat.geom-package}} to be installed.

\item \code{as_sfnetwork(psp)}: Convert spatial line segments of class
\code{\link[spatstat.geom]{psp}} directly into an \code{\link{sfnetwork}}.
The lines become the edges in the network, and nodes are placed at their
boundary points.

\item \code{as_sfnetwork(sfc)}: Convert spatial geometries of class
\code{\link[sf]{sfc}} directly into an \code{\link{sfnetwork}}.
Supported geometry types are either \code{LINESTRING} or \code{POINT}. In
the first case, the lines become the edges in the network, and nodes are
placed at their boundary points. All arguments are forwarded to
\code{\link{create_from_spatial_lines}}. In the latter case, the points
become the nodes in the network, and are connected by edges according to a
specified method. All arguments are forwarded to
\code{\link{create_from_spatial_points}}.

\item \code{as_sfnetwork(sfNetwork)}: Convert spatial networks of class
\code{\link[stplanr]{sfNetwork}} directly into an \code{\link{sfnetwork}}.
This will extract the edges as an \code{\link[sf]{sf}} object and re-create
the network structure. The directness of the provided object is preserved
unless specified otherwise through the \code{directed} argument.

\item \code{as_sfnetwork(tbl_graph)}: Convert graph objects of class
\code{\link[tidygraph]{tbl_graph}} directly into an \code{\link{sfnetwork}}.
This will work if at least the nodes can be converted to an
\code{\link[sf]{sf}} object through \code{\link[sf]{st_as_sf}}. The
directness of the provided object is preserved unless specified otherwise
through the \code{directed} argument.

}}
\examples{
# From an sf object with LINESTRING geometries.
library(sf, quietly = TRUE)

as_sfnetwork(roxel)

oldpar = par(no.readonly = TRUE)
par(mar = c(1,1,1,1), mfrow = c(1,2))
plot(st_geometry(roxel))
plot(as_sfnetwork(roxel))
par(oldpar)

# From a linnet object.
if (require(spatstat.geom, quietly = TRUE)) {
  as_sfnetwork(simplenet)
}

# From a psp object.
if (require(spatstat.geom, quietly = TRUE)) {
  set.seed(42)
  test_psp = psp(runif(10), runif(10), runif(10), runif(10), window=owin())
  as_sfnetwork(test_psp)
}

}
