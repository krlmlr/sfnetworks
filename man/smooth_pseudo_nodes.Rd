% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth.R
\name{smooth_pseudo_nodes}
\alias{smooth_pseudo_nodes}
\title{Smooth pseudo nodes}
\usage{
smooth_pseudo_nodes(
  x,
  protect = NULL,
  require_equal = NULL,
  summarise_attributes = "concat",
  store_original_ids = FALSE,
  store_original_data = FALSE
)
}
\arguments{
\item{x}{An object of class \code{\link{sfnetwork}}.}

\item{protect}{Nodes to be protected from being removed, no matter if they
are a pseudo node or not. Evaluated by \code{\link{evaluate_node_query}}.
Defaults to \code{NULL}, meaning that none of the nodes is protected.}

\item{require_equal}{Which attributes of its incident edges should be equal
in order for a pseudo node to be removed? Evaluated as a
\code{\link[dplyr]{dplyr_tidy_select}} argument. Defaults to \code{NULL},
meaning that attribute equality is not considered for pseudo node removal.}

\item{summarise_attributes}{How should the attributes of concatenated edges
be summarized? There are several options, see
\code{\link[igraph]{igraph-attribute-combination}} for details.}

\item{store_original_ids}{For each concatenated edge, should the indices of
the original edges be stored as an attribute of the new edge, in a column
named \code{.tidygraph_edge_index}? This is in line with the design
principles of \code{tidygraph}. Defaults to \code{FALSE}.}

\item{store_original_data}{For each concatenated edge, should the data of
the original edges be stored as an attribute of the new edge, in a column
named \code{.orig_data}? This is in line with the design principles of
\code{tidygraph}. Defaults to \code{FALSE}.}
}
\value{
The smoothed network as object of class \code{\link{sfnetwork}}.
}
\description{
Construct a smoothed version of the network by iteratively removing pseudo
nodes, while preserving the connectivity of the network. In the case of
directed networks, pseudo nodes are those nodes that have only one incoming
and one outgoing edge. In undirected networks, pseudo nodes are those nodes
that have two incident edges. Equality of attribute values among the two
edges can be defined as an additional requirement by setting the
\code{require_equal} parameter. Connectivity of the network is preserved by
concatenating the incident edges of each removed pseudo node.
}
