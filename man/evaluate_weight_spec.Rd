% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weights.R
\name{evaluate_weight_spec}
\alias{evaluate_weight_spec}
\title{Specify edge weights in a spatial network}
\usage{
evaluate_weight_spec(data, spec)
}
\arguments{
\item{data}{An object of class \code{\link{sfnetwork}}.}

\item{spec}{The specification that defines how to compute or extract edge
weights defused into a \code{\link[dplyr:topic-quosure]{quosure}}. See
Details for the different ways in which edge weights can be specified.}
}
\value{
A numeric vector of edge weights.
}
\description{
This function is not meant to be called directly, but used inside other
functions that accept the specification of edge weights.
}
\details{
There are multiple ways in which edge weights can be specified in
sfnetworks. The specification can be formatted as follows:

\itemize{
  \item As edge measure function: A
  \link[=spatial_edge_measures]{spatial edge measure function} computes a
  given measure for each edge, which will then be used as edge weights.
  \item As column name: A column in the edges table of the network that
  contains the edge weights. Note that tidy evaluation is used and hence the
  column name should be unquoted.
  \item As a numeric vector: This vector should be of the same length as the
  number of edges in the network, specifying for each edge what its weight
  is.
  \item As dual weights: Dual weights can be specified by the
  \code{\link{dual_weights}} function. This allows to use a different set of
  weights for shortest paths computation and for reporting the total cost of
  those paths. Note that not every routing backend support dual-weighted
  routing.
}

If the weight specification is \code{NULL} or \code{NA}, this means that no
edge weights are used. For shortest path computation, this means that the
shortest path is simply the path with the fewest number of edges.
}
\note{
For backward compatibility it is currently also still possible to
format the specification as a quoted column name, but this may be removed in
future versions.

Also note that many shortest path algorithms require edge weights to be
positive.
}
